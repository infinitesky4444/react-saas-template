{"version":3,"sources":["universalComponents/CardChart.js"],"names":["labelFormatter","label","format","Date","calculateMin","data","yKey","factor","max","Number","POSITIVE_INFINITY","Object","values","forEach","element","Math","round","options","CardChart","state","anchorEl","selectedOption","handleClick","event","_this","setState","currentTarget","getSeconds","Error","getSubtitle","processData","props","seconds","minSeconds","arr","i","length","timestamp","unshift","selectOption","handleClose","_this2","this","_this$props","color","title","classes","theme","height","_this$state","open","Boolean","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_material_ui_core__WEBPACK_IMPORTED_MODULE_6__","className","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","variant","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","aria-label","aria-owns","undefined","aria-haspopup","onClick","_material_ui_icons_MoreVert__WEBPACK_IMPORTED_MODULE_16___default","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","id","onClose","PaperProps","style","maxHeight","ITEM_HEIGHT","width","map","option","_material_ui_core__WEBPACK_IMPORTED_MODULE_10__","key","selected","name","_material_ui_core__WEBPACK_IMPORTED_MODULE_11__","classNames","cardContentInner","recharts__WEBPACK_IMPORTED_MODULE_14__","type","dataKey","domain","hide","stroke","fill","cursor","contentStyle","border","padding","spacing","borderRadius","shape","boxShadow","shadows","labelStyle","typography","body1","itemStyle","fontSize","letterSpacing","fontFamily","lineHeight","fontWeight","PureComponent","withStyles","marginTop","withTheme"],"mappings":"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","file":"static/js/13.9213d264.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport classNames from \"classnames\";\r\nimport {\r\n  AreaChart,\r\n  Area,\r\n  XAxis,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  YAxis\r\n} from \"recharts\";\r\nimport format from \"date-fns/format\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nconst styles = theme => ({\r\n  cardContentInner: {\r\n    marginTop: -1 * theme.spacing(4)\r\n  }\r\n});\r\n\r\nfunction labelFormatter(label) {\r\n  return format(new Date(label * 1000), \"MMMM d, p yyyy\");\r\n  // return format(new Date(label * 1000), \"MMMM d, p\");\r\n}\r\n\r\nfunction calculateMin(data, yKey, factor) {\r\n  let max = Number.POSITIVE_INFINITY;\r\n  Object.values(data).forEach(element => {\r\n    if (max > element[yKey]) {\r\n      max = element[yKey];\r\n    }\r\n  });\r\n  return Math.round(max - max * factor);\r\n}\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst options = [\"1 Week\", \"1 Month\", \"6 Months\"];\r\n\r\nclass CardChart extends PureComponent {\r\n  state = { anchorEl: null, selectedOption: \"1 Month\" };\r\n\r\n  handleClick = event => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  getSeconds = () => {\r\n    const { selectedOption } = this.state;\r\n    switch (selectedOption) {\r\n      case \"1 Week\":\r\n        return 60 * 60 * 24 * 7;\r\n      case \"1 Month\":\r\n        return 60 * 60 * 24 * 7 * 31;\r\n      case \"6 Months\":\r\n        return 60 * 60 * 24 * 7 * 31 * 6;\r\n      default:\r\n        throw new Error(\"No branch selected in switch-statement\");\r\n    }\r\n  };\r\n\r\n  getSubtitle = () => {\r\n    const { selectedOption } = this.state;\r\n    switch (selectedOption) {\r\n      case \"1 Week\":\r\n        return \"Last week\";\r\n      case \"1 Month\":\r\n        return \"Last month\";\r\n      case \"6 Months\":\r\n        return \"Last 6 months\";\r\n      default:\r\n        throw new Error(\"No branch selected in switch-statement\");\r\n    }\r\n  };\r\n\r\n  processData = () => {\r\n    const { data } = this.props;\r\n    const seconds = this.getSeconds();\r\n    const minSeconds = new Date() / 1000 - seconds;\r\n    const arr = [];\r\n    for (let i = 0; i < data.length; i += 1) {\r\n      if (minSeconds < data[i].timestamp) {\r\n        arr.unshift(data[i]);\r\n      }\r\n    }\r\n    return arr;\r\n  };\r\n\r\n  selectOption = selectedOption => {\r\n    this.setState({ selectedOption, anchorEl: null });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n\r\n  render() {\r\n    const { color, data, title, classes, theme, height, yKey } = this.props;\r\n    const { anchorEl, selectedOption } = this.state;\r\n    const open = Boolean(anchorEl);\r\n    return (\r\n      <Card>\r\n        <div className=\"p-2\">\r\n          <div className=\"d-flex justify-content-between mb-1\">\r\n            <div>\r\n              <Typography variant=\"subtitle1\">{title}</Typography>\r\n              <Typography variant=\"body2\" className=\"text-secondary-greyed\">\r\n                {this.getSubtitle()}\r\n              </Typography>\r\n            </div>\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"More\"\r\n                aria-owns={open ? \"long-menu\" : undefined}\r\n                aria-haspopup=\"true\"\r\n                onClick={this.handleClick}\r\n              >\r\n                <MoreVertIcon />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"long-menu\"\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={this.handleClose}\r\n                PaperProps={{\r\n                  style: {\r\n                    maxHeight: ITEM_HEIGHT * 4.5,\r\n                    width: 200\r\n                  }\r\n                }}\r\n              >\r\n                {options.map(option => (\r\n                  <MenuItem\r\n                    key={option}\r\n                    selected={option === selectedOption}\r\n                    onClick={() => {\r\n                      this.selectOption(option);\r\n                    }}\r\n                    name={option}\r\n                  >\r\n                    {option}\r\n                  </MenuItem>\r\n                ))}\r\n              </Menu>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <CardContent>\r\n          <div\r\n            className={classNames(classes.cardContentInner, \"w-100\")}\r\n            style={{ height }}\r\n          >\r\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n              <AreaChart data={this.processData()} type=\"number\">\r\n                <XAxis\r\n                  dataKey=\"timestamp\"\r\n                  type=\"number\"\r\n                  domain={[\"dataMin\", \"dataMax\"]}\r\n                  hide\r\n                />\r\n                <YAxis\r\n                  domain={[calculateMin(data, yKey, 0.05), \"dataMax\"]}\r\n                  hide\r\n                />\r\n                <Area\r\n                  type=\"monotone\"\r\n                  dataKey={yKey}\r\n                  stroke={color}\r\n                  fill={color}\r\n                />\r\n                <Tooltip\r\n                  labelFormatter={labelFormatter}\r\n                  cursor={false}\r\n                  contentStyle={{\r\n                    border: \"none\",\r\n                    padding: theme.spacing(1),\r\n                    borderRadius: theme.shape.borderRadius,\r\n                    boxShadow: theme.shadows[1]\r\n                  }}\r\n                  labelStyle={theme.typography.body1}\r\n                  itemStyle={{\r\n                    fontSize: theme.typography.body1.fontSize,\r\n                    letterSpacing: theme.typography.body1.letterSpacing,\r\n                    fontFamily: theme.typography.body1.fontFamily,\r\n                    lineHeight: theme.typography.body1.lineHeight,\r\n                    fontWeight: theme.typography.body1.fontWeight\r\n                  }}\r\n                />\r\n              </AreaChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nCardChart.propTypes = {\r\n  color: PropTypes.string,\r\n  data: PropTypes.array,\r\n  title: PropTypes.string,\r\n  classes: PropTypes.object,\r\n  theme: PropTypes.object,\r\n  height: PropTypes.string,\r\n  yKey: PropTypes.string\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(CardChart);\r\n"],"sourceRoot":""}